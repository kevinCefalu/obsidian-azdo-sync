
name: Release Plugin

on:
  # Manual Trigger
  workflow_dispatch:
  # Push Trigger(s)
  push:
    tags:
      - "*"

permissions: write-all

env:
  PLUGIN_NAME: psi-azdo-sync

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: üå± Checkout Repository
        uses: actions/checkout@v3

      - name: üçè Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: package-lock.json

      - name: ‚öôÔ∏è Build Artifact
        id: build
        run: |
          npm install;
          npm run build;

          cd dist;
          rm ${{ env.PLUGIN_NAME }}/versions.json;
          zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }};

          echo "::set-output name=tag_name::$(git tag --sort version:refname | tail -n 1)";

      - name: test
        run: |
          ls -la dist/;
          ls -la dist/${{ env.PLUGIN_NAME }}/;
          echo "tag_name == ${{ steps.build.outputs.tag_name }}";

      - name: ‚¨ÜÔ∏è Publish Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PLUGIN_NAME }}
          path: dist/${{ env.PLUGIN_NAME }}/

      # - name: ü•≥ Create Release
      #   id: release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     VERSION: ${{ github.ref }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: v${{ github.ref }}
      #     draft: true # TODO: Change based on tag
      #     prerelease: true # TODO: Change based on tag

      # - name: üìé ${{ env.PLUGIN_NAME }}.zip
      #   id: upload-zip
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.release.outputs.upload_url }}
      #     asset_path: dist/${{ env.PLUGIN_NAME }}.zip
      #     asset_name: ${{ env.PLUGIN_NAME }}-${{ steps.build.outputs.tag_name }}.zip
      #     asset_content_type: application/zip

      # - name: üìé manifest.json
      #   id: upload-manifest
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.release.outputs.upload_url }}
      #     asset_path: dist/${{ env.PLUGIN_NAME }}/manifest.json
      #     asset_name: manifest.json
      #     asset_content_type: application/json

      # - name: üìé main.js
      #   id: upload-main
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.release.outputs.upload_url }}
      #     asset_path: dist/${{ env.PLUGIN_NAME }}/main.js
      #     asset_name: main.js
      #     asset_content_type: text/javascript

      # - name: üìé md templates
      #   id: upload-templates
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.release.outputs.upload_url }}
      #     asset_path: dist/${{ env.PLUGIN_NAME }}/templates/*
      #     asset_name: md-templates
      #     asset_content_type: text/markdown

      # - name: üìé styles.css
      #   id: upload-styles
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.release.outputs.upload_url }}
      #     asset_path: dist/${{ env.PLUGIN_NAME }}/styles.css
      #     asset_name: styles.css
      #     asset_content_type: text/css

      - name: ü•≥ Publish Release
        working-directory: dist/${{ env.PLUGIN_NAME }}/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag="${GITHUB_REF#refs/tags/}"
          echo "Creating release for tag $tag"

          gh release create "$tag" --title="v$tag" \
            --prerelease --discussion-category "Announcements" \
            main.js manifest.json styles.css templates/*
